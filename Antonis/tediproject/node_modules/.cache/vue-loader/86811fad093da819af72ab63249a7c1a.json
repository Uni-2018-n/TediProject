{"remainingRequest":"C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\src\\components\\jobsPage\\jobs.vue?vue&type=template&id=5c528440&scoped=true","dependencies":[{"path":"C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\src\\components\\jobsPage\\jobs.vue","mtime":1631546156044},{"path":"C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1626466876000},{"path":"C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1626466876000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0iZXh0ZXJuYWwiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJpbnRlcm5hbCI+DQogICAgICAgICAgICA8dWwgdi1pZj0icG9zdHMubGVuZ3RoIj4NCiAgICAgICAgICAgICAgICA8bGkgdi1mb3I9InBvc3QgaW4gcG9zdHMiIDprZXk9InBvc3QiPg0KICAgICAgICAgICAgICAgICAgICA8dXNlckpvYiA6c3JjPSJwb3N0IiA6dXNlcklkPSJteUlkIiA6bXk9ImZhbHNlIi8+DQogICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbHNlIiB2LWVsc2U+DQogICAgICAgICAgICAgICAgPHNwYW4+Tm8gSm9icyBBdmFpbGFibGU8L3NwYW4+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo="},{"version":3,"sources":["C:\\Users\\nizar\\OneDrive\\Documents\\github\\TediProject-1\\Antonis\\tediproject\\src\\components\\jobsPage\\jobs.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC,CAAC;YACR,CAAC,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/nizar/OneDrive/Documents/github/TediProject-1/Antonis/tediproject/src/components/jobsPage/jobs.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"external\">\r\n        <div class=\"internal\">\r\n            <ul v-if=\"posts.length\">\r\n                <li v-for=\"post in posts\" :key=\"post\">\r\n                    <userJob :src=\"post\" :userId=\"myId\" :my=\"false\"/>\r\n                </li>\r\n            </ul>\r\n            <div class=\"else\" v-else>\r\n                <span>No Jobs Available</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport axios from 'axios';\r\nimport { defineComponent, ref } from 'vue';\r\nimport userJob from '../jobsPage/userJob.vue';\r\nimport { jobType } from '../../tsLibs/jobs'\r\n\r\nexport default defineComponent({\r\n    name: \"jobs\",\r\n    props: {\r\n        myId: {type: String, required: true},\r\n    },\r\n    components: {\r\n        userJob,\r\n    },\r\n    async setup(props) {\r\n        const posts = ref<jobType[]>()\r\n        try {\r\n            const response = await axios.get(\"https://localhost:8000/jobs/\"+props.myId)\r\n            posts.value = response.data.all_jobs\r\n        }catch(error){\r\n            console.log(\"**GET JOBS ERROR**\")\r\n        }\r\n        return { posts }\r\n    },\r\n})\r\n</script>\r\n<style scoped>\r\n.internal ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n.internal ul li {\r\n    margin-top: 15px;\r\n}\r\n\r\n.else {\r\n    text-align: center;\r\n    margin: 25px;\r\n}\r\n.else span {\r\n    font-size: 40px;\r\n    font-weight: bolder;\r\n    color: rgb(116, 116, 116);\r\n}\r\n</style>"]}]}